// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TicketStatus {
  OPEN
  CLOSED
}

model GuildMember {
  discordId String @id
  guildId   String

  minecraftUUID     String?
  minecraftUsername String?

  lastActive DateTime @default(now())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  Ticket     Ticket[]
}

model TicketTemplate {
  id                    String   @id @default(uuid())
  guildId               String
  name                  String
  description           String
  preScreeningQuestions String[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Ticket    Ticket[]
}

model TicketMessage {
  id         String   @id @default(uuid())
  ticketId   String
  authorName String
  content    String
  Ticket     Ticket   @relation(fields: [ticketId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Ticket {
  id                   String  @id @default(uuid())
  guildId              String
  channelId            String
  guildMemberDiscordId String
  ticketTemplateId     String?

  creator  GuildMember     @relation(fields: [guildMemberDiscordId], references: [discordId])
  template TicketTemplate? @relation(fields: [ticketTemplateId], references: [id])
  messages TicketMessage[]
  status   TicketStatus

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
